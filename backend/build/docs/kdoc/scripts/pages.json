[{"name":"abstract fun findByNotebookId(notebookId: UUID): List<Note>","description":"de.thm.mni.backend.note.repository.NoteRepository.findByNotebookId","location":"backend/de.thm.mni.backend.note.repository/-note-repository/find-by-notebook-id.html","searchKeys":["findByNotebookId","abstract fun findByNotebookId(notebookId: UUID): List<Note>","de.thm.mni.backend.note.repository.NoteRepository.findByNotebookId"]},{"name":"abstract fun findByNotebook_Id(notebookId: UUID): List<Note>","description":"de.thm.mni.backend.note.repository.NoteRepository.findByNotebook_Id","location":"backend/de.thm.mni.backend.note.repository/-note-repository/find-by-notebook_-id.html","searchKeys":["findByNotebook_Id","abstract fun findByNotebook_Id(notebookId: UUID): List<Note>","de.thm.mni.backend.note.repository.NoteRepository.findByNotebook_Id"]},{"name":"abstract fun findByTitleContainingIgnoreCase(title: String): List<Note>","description":"de.thm.mni.backend.note.repository.NoteRepository.findByTitleContainingIgnoreCase","location":"backend/de.thm.mni.backend.note.repository/-note-repository/find-by-title-containing-ignore-case.html","searchKeys":["findByTitleContainingIgnoreCase","abstract fun findByTitleContainingIgnoreCase(title: String): List<Note>","de.thm.mni.backend.note.repository.NoteRepository.findByTitleContainingIgnoreCase"]},{"name":"abstract fun findByUserId(userId: String): List<Note>","description":"de.thm.mni.backend.note.repository.NoteRepository.findByUserId","location":"backend/de.thm.mni.backend.note.repository/-note-repository/find-by-user-id.html","searchKeys":["findByUserId","abstract fun findByUserId(userId: String): List<Note>","de.thm.mni.backend.note.repository.NoteRepository.findByUserId"]},{"name":"abstract fun findByUserId(userId: String): List<Notebook>","description":"de.thm.mni.backend.notebook.repository.NotebookRepository.findByUserId","location":"backend/de.thm.mni.backend.notebook.repository/-notebook-repository/find-by-user-id.html","searchKeys":["findByUserId","abstract fun findByUserId(userId: String): List<Notebook>","de.thm.mni.backend.notebook.repository.NotebookRepository.findByUserId"]},{"name":"abstract fun findByUserIdAndNotebookId(userId: String, notebookId: UUID): List<Note>","description":"de.thm.mni.backend.note.repository.NoteRepository.findByUserIdAndNotebookId","location":"backend/de.thm.mni.backend.note.repository/-note-repository/find-by-user-id-and-notebook-id.html","searchKeys":["findByUserIdAndNotebookId","abstract fun findByUserIdAndNotebookId(userId: String, notebookId: UUID): List<Note>","de.thm.mni.backend.note.repository.NoteRepository.findByUserIdAndNotebookId"]},{"name":"abstract fun findByUserIdAndTitleContainingIgnoreCase(userId: String, title: String): List<Note>","description":"de.thm.mni.backend.note.repository.NoteRepository.findByUserIdAndTitleContainingIgnoreCase","location":"backend/de.thm.mni.backend.note.repository/-note-repository/find-by-user-id-and-title-containing-ignore-case.html","searchKeys":["findByUserIdAndTitleContainingIgnoreCase","abstract fun findByUserIdAndTitleContainingIgnoreCase(userId: String, title: String): List<Note>","de.thm.mni.backend.note.repository.NoteRepository.findByUserIdAndTitleContainingIgnoreCase"]},{"name":"abstract fun findByUsername(username: String): User?","description":"de.thm.mni.backend.user.repository.UserRepository.findByUsername","location":"backend/de.thm.mni.backend.user.repository/-user-repository/find-by-username.html","searchKeys":["findByUsername","abstract fun findByUsername(username: String): User?","de.thm.mni.backend.user.repository.UserRepository.findByUsername"]},{"name":"class AuthApi(userService: UserService, tokenService: TokenService)","description":"de.thm.mni.backend.auth.api.AuthApi","location":"backend/de.thm.mni.backend.auth.api/-auth-api/index.html","searchKeys":["AuthApi","class AuthApi(userService: UserService, tokenService: TokenService)","de.thm.mni.backend.auth.api.AuthApi"]},{"name":"class BackendApplication","description":"de.thm.mni.backend.BackendApplication","location":"backend/de.thm.mni.backend/-backend-application/index.html","searchKeys":["BackendApplication","class BackendApplication","de.thm.mni.backend.BackendApplication"]},{"name":"class DataLoader(userRepository: UserRepository, notebookRepository: NotebookRepository, noteRepository: NoteRepository) : CommandLineRunner","description":"de.thm.mni.backend.config.DataLoader","location":"backend/de.thm.mni.backend.config/-data-loader/index.html","searchKeys":["DataLoader","class DataLoader(userRepository: UserRepository, notebookRepository: NotebookRepository, noteRepository: NoteRepository) : CommandLineRunner","de.thm.mni.backend.config.DataLoader"]},{"name":"class JwtAuthenticationFilter(tokenService: TokenService) : OncePerRequestFilter","description":"de.thm.mni.backend.auth.filter.JwtAuthenticationFilter","location":"backend/de.thm.mni.backend.auth.filter/-jwt-authentication-filter/index.html","searchKeys":["JwtAuthenticationFilter","class JwtAuthenticationFilter(tokenService: TokenService) : OncePerRequestFilter","de.thm.mni.backend.auth.filter.JwtAuthenticationFilter"]},{"name":"class Note(val id: UUID? = null, val title: String = \"\", val createdAt: Date = Date(), val modifiedAt: Date = Date(), val content: String = \"\", val userId: String = \"\", val notebookId: UUID? = null, val notebook: Notebook? = null)","description":"de.thm.mni.backend.note.model.Note","location":"backend/de.thm.mni.backend.note.model/-note/index.html","searchKeys":["Note","class Note(val id: UUID? = null, val title: String = \"\", val createdAt: Date = Date(), val modifiedAt: Date = Date(), val content: String = \"\", val userId: String = \"\", val notebookId: UUID? = null, val notebook: Notebook? = null)","de.thm.mni.backend.note.model.Note"]},{"name":"class NoteApi(noteRepository: NoteRepository, notebookRepository: NotebookRepository)","description":"de.thm.mni.backend.note.api.NoteApi","location":"backend/de.thm.mni.backend.note.api/-note-api/index.html","searchKeys":["NoteApi","class NoteApi(noteRepository: NoteRepository, notebookRepository: NotebookRepository)","de.thm.mni.backend.note.api.NoteApi"]},{"name":"class NoteGraphQLController(noteRepository: NoteRepository, notebookRepository: NotebookRepository)","description":"de.thm.mni.backend.note.api.NoteGraphQLController","location":"backend/de.thm.mni.backend.note.api/-note-graph-q-l-controller/index.html","searchKeys":["NoteGraphQLController","class NoteGraphQLController(noteRepository: NoteRepository, notebookRepository: NotebookRepository)","de.thm.mni.backend.note.api.NoteGraphQLController"]},{"name":"class Notebook(val id: UUID? = null, val title: String = \"\", val createdAt: Date = Date(), val notes: List<Note> = emptyList(), val userId: String = \"\", val image: String = \"\")","description":"de.thm.mni.backend.notebook.model.Notebook","location":"backend/de.thm.mni.backend.notebook.model/-notebook/index.html","searchKeys":["Notebook","class Notebook(val id: UUID? = null, val title: String = \"\", val createdAt: Date = Date(), val notes: List<Note> = emptyList(), val userId: String = \"\", val image: String = \"\")","de.thm.mni.backend.notebook.model.Notebook"]},{"name":"class NotebookApi(notebookRepository: NotebookRepository)","description":"de.thm.mni.backend.notebook.api.NotebookApi","location":"backend/de.thm.mni.backend.notebook.api/-notebook-api/index.html","searchKeys":["NotebookApi","class NotebookApi(notebookRepository: NotebookRepository)","de.thm.mni.backend.notebook.api.NotebookApi"]},{"name":"class NotebookGraphQLController(notebookRepository: NotebookRepository)","description":"de.thm.mni.backend.notebook.api.NotebookGraphQLController","location":"backend/de.thm.mni.backend.notebook.api/-notebook-graph-q-l-controller/index.html","searchKeys":["NotebookGraphQLController","class NotebookGraphQLController(notebookRepository: NotebookRepository)","de.thm.mni.backend.notebook.api.NotebookGraphQLController"]},{"name":"class SecurityConfig(jwtAuthenticationFilter: JwtAuthenticationFilter)","description":"de.thm.mni.backend.config.SecurityConfig","location":"backend/de.thm.mni.backend.config/-security-config/index.html","searchKeys":["SecurityConfig","class SecurityConfig(jwtAuthenticationFilter: JwtAuthenticationFilter)","de.thm.mni.backend.config.SecurityConfig"]},{"name":"class TokenService(userService: UserService)","description":"de.thm.mni.backend.auth.token.TokenService","location":"backend/de.thm.mni.backend.auth.token/-token-service/index.html","searchKeys":["TokenService","class TokenService(userService: UserService)","de.thm.mni.backend.auth.token.TokenService"]},{"name":"class User(val id: UUID? = null, val username: String = \"\", val firstName: String = \"\", val lastName: String = \"\", val email: String = \"\", val password: String = \"\")","description":"de.thm.mni.backend.user.model.User","location":"backend/de.thm.mni.backend.user.model/-user/index.html","searchKeys":["User","class User(val id: UUID? = null, val username: String = \"\", val firstName: String = \"\", val lastName: String = \"\", val email: String = \"\", val password: String = \"\")","de.thm.mni.backend.user.model.User"]},{"name":"class UserApi(userService: UserService)","description":"de.thm.mni.backend.user.api.UserApi","location":"backend/de.thm.mni.backend.user.api/-user-api/index.html","searchKeys":["UserApi","class UserApi(userService: UserService)","de.thm.mni.backend.user.api.UserApi"]},{"name":"class UserGraphQLController(userService: UserService)","description":"de.thm.mni.backend.user.api.UserGraphQLController","location":"backend/de.thm.mni.backend.user.api/-user-graph-q-l-controller/index.html","searchKeys":["UserGraphQLController","class UserGraphQLController(userService: UserService)","de.thm.mni.backend.user.api.UserGraphQLController"]},{"name":"class UserService(userRepository: UserRepository)","description":"de.thm.mni.backend.user.service.UserService","location":"backend/de.thm.mni.backend.user.service/-user-service/index.html","searchKeys":["UserService","class UserService(userRepository: UserRepository)","de.thm.mni.backend.user.service.UserService"]},{"name":"constructor()","description":"de.thm.mni.backend.BackendApplication.BackendApplication","location":"backend/de.thm.mni.backend/-backend-application/-backend-application.html","searchKeys":["BackendApplication","constructor()","de.thm.mni.backend.BackendApplication.BackendApplication"]},{"name":"constructor(id: String, username: String, firstName: String, lastName: String, email: String)","description":"de.thm.mni.backend.user.api.dto.UserResponse.UserResponse","location":"backend/de.thm.mni.backend.user.api.dto/-user-response/-user-response.html","searchKeys":["UserResponse","constructor(id: String, username: String, firstName: String, lastName: String, email: String)","de.thm.mni.backend.user.api.dto.UserResponse.UserResponse"]},{"name":"constructor(id: UUID? = null, title: String = \"\", createdAt: Date = Date(), modifiedAt: Date = Date(), content: String = \"\", userId: String = \"\", notebookId: UUID? = null, notebook: Notebook? = null)","description":"de.thm.mni.backend.note.model.Note.Note","location":"backend/de.thm.mni.backend.note.model/-note/-note.html","searchKeys":["Note","constructor(id: UUID? = null, title: String = \"\", createdAt: Date = Date(), modifiedAt: Date = Date(), content: String = \"\", userId: String = \"\", notebookId: UUID? = null, notebook: Notebook? = null)","de.thm.mni.backend.note.model.Note.Note"]},{"name":"constructor(id: UUID? = null, title: String = \"\", createdAt: Date = Date(), notes: List<Note> = emptyList(), userId: String = \"\", image: String = \"\")","description":"de.thm.mni.backend.notebook.model.Notebook.Notebook","location":"backend/de.thm.mni.backend.notebook.model/-notebook/-notebook.html","searchKeys":["Notebook","constructor(id: UUID? = null, title: String = \"\", createdAt: Date = Date(), notes: List<Note> = emptyList(), userId: String = \"\", image: String = \"\")","de.thm.mni.backend.notebook.model.Notebook.Notebook"]},{"name":"constructor(id: UUID? = null, username: String = \"\", firstName: String = \"\", lastName: String = \"\", email: String = \"\", password: String = \"\")","description":"de.thm.mni.backend.user.model.User.User","location":"backend/de.thm.mni.backend.user.model/-user/-user.html","searchKeys":["User","constructor(id: UUID? = null, username: String = \"\", firstName: String = \"\", lastName: String = \"\", email: String = \"\", password: String = \"\")","de.thm.mni.backend.user.model.User.User"]},{"name":"constructor(jwtAuthenticationFilter: JwtAuthenticationFilter)","description":"de.thm.mni.backend.config.SecurityConfig.SecurityConfig","location":"backend/de.thm.mni.backend.config/-security-config/-security-config.html","searchKeys":["SecurityConfig","constructor(jwtAuthenticationFilter: JwtAuthenticationFilter)","de.thm.mni.backend.config.SecurityConfig.SecurityConfig"]},{"name":"constructor(noteRepository: NoteRepository, notebookRepository: NotebookRepository)","description":"de.thm.mni.backend.note.api.NoteApi.NoteApi","location":"backend/de.thm.mni.backend.note.api/-note-api/-note-api.html","searchKeys":["NoteApi","constructor(noteRepository: NoteRepository, notebookRepository: NotebookRepository)","de.thm.mni.backend.note.api.NoteApi.NoteApi"]},{"name":"constructor(noteRepository: NoteRepository, notebookRepository: NotebookRepository)","description":"de.thm.mni.backend.note.api.NoteGraphQLController.NoteGraphQLController","location":"backend/de.thm.mni.backend.note.api/-note-graph-q-l-controller/-note-graph-q-l-controller.html","searchKeys":["NoteGraphQLController","constructor(noteRepository: NoteRepository, notebookRepository: NotebookRepository)","de.thm.mni.backend.note.api.NoteGraphQLController.NoteGraphQLController"]},{"name":"constructor(notebookRepository: NotebookRepository)","description":"de.thm.mni.backend.notebook.api.NotebookApi.NotebookApi","location":"backend/de.thm.mni.backend.notebook.api/-notebook-api/-notebook-api.html","searchKeys":["NotebookApi","constructor(notebookRepository: NotebookRepository)","de.thm.mni.backend.notebook.api.NotebookApi.NotebookApi"]},{"name":"constructor(notebookRepository: NotebookRepository)","description":"de.thm.mni.backend.notebook.api.NotebookGraphQLController.NotebookGraphQLController","location":"backend/de.thm.mni.backend.notebook.api/-notebook-graph-q-l-controller/-notebook-graph-q-l-controller.html","searchKeys":["NotebookGraphQLController","constructor(notebookRepository: NotebookRepository)","de.thm.mni.backend.notebook.api.NotebookGraphQLController.NotebookGraphQLController"]},{"name":"constructor(title: String, content: String, notebookId: String)","description":"de.thm.mni.backend.note.api.dto.NoteInput.NoteInput","location":"backend/de.thm.mni.backend.note.api.dto/-note-input/-note-input.html","searchKeys":["NoteInput","constructor(title: String, content: String, notebookId: String)","de.thm.mni.backend.note.api.dto.NoteInput.NoteInput"]},{"name":"constructor(title: String, content: String, notebookId: UUID? = null)","description":"de.thm.mni.backend.note.api.CreateNoteRequest.CreateNoteRequest","location":"backend/de.thm.mni.backend.note.api/-create-note-request/-create-note-request.html","searchKeys":["CreateNoteRequest","constructor(title: String, content: String, notebookId: UUID? = null)","de.thm.mni.backend.note.api.CreateNoteRequest.CreateNoteRequest"]},{"name":"constructor(title: String, content: String, notebookId: UUID? = null)","description":"de.thm.mni.backend.note.api.UpdateNoteRequest.UpdateNoteRequest","location":"backend/de.thm.mni.backend.note.api/-update-note-request/-update-note-request.html","searchKeys":["UpdateNoteRequest","constructor(title: String, content: String, notebookId: UUID? = null)","de.thm.mni.backend.note.api.UpdateNoteRequest.UpdateNoteRequest"]},{"name":"constructor(title: String, image: String)","description":"de.thm.mni.backend.notebook.api.CreateNotebookRequest.CreateNotebookRequest","location":"backend/de.thm.mni.backend.notebook.api/-create-notebook-request/-create-notebook-request.html","searchKeys":["CreateNotebookRequest","constructor(title: String, image: String)","de.thm.mni.backend.notebook.api.CreateNotebookRequest.CreateNotebookRequest"]},{"name":"constructor(title: String, image: String)","description":"de.thm.mni.backend.notebook.api.UpdateNotebookRequest.UpdateNotebookRequest","location":"backend/de.thm.mni.backend.notebook.api/-update-notebook-request/-update-notebook-request.html","searchKeys":["UpdateNotebookRequest","constructor(title: String, image: String)","de.thm.mni.backend.notebook.api.UpdateNotebookRequest.UpdateNotebookRequest"]},{"name":"constructor(title: String, image: String? = null)","description":"de.thm.mni.backend.notebook.api.dto.NotebookInput.NotebookInput","location":"backend/de.thm.mni.backend.notebook.api.dto/-notebook-input/-notebook-input.html","searchKeys":["NotebookInput","constructor(title: String, image: String? = null)","de.thm.mni.backend.notebook.api.dto.NotebookInput.NotebookInput"]},{"name":"constructor(token: String)","description":"de.thm.mni.backend.auth.api.dto.TokenResponse.TokenResponse","location":"backend/de.thm.mni.backend.auth.api.dto/-token-response/-token-response.html","searchKeys":["TokenResponse","constructor(token: String)","de.thm.mni.backend.auth.api.dto.TokenResponse.TokenResponse"]},{"name":"constructor(tokenService: TokenService)","description":"de.thm.mni.backend.auth.filter.JwtAuthenticationFilter.JwtAuthenticationFilter","location":"backend/de.thm.mni.backend.auth.filter/-jwt-authentication-filter/-jwt-authentication-filter.html","searchKeys":["JwtAuthenticationFilter","constructor(tokenService: TokenService)","de.thm.mni.backend.auth.filter.JwtAuthenticationFilter.JwtAuthenticationFilter"]},{"name":"constructor(userRepository: UserRepository)","description":"de.thm.mni.backend.user.service.UserService.UserService","location":"backend/de.thm.mni.backend.user.service/-user-service/-user-service.html","searchKeys":["UserService","constructor(userRepository: UserRepository)","de.thm.mni.backend.user.service.UserService.UserService"]},{"name":"constructor(userRepository: UserRepository, notebookRepository: NotebookRepository, noteRepository: NoteRepository)","description":"de.thm.mni.backend.config.DataLoader.DataLoader","location":"backend/de.thm.mni.backend.config/-data-loader/-data-loader.html","searchKeys":["DataLoader","constructor(userRepository: UserRepository, notebookRepository: NotebookRepository, noteRepository: NoteRepository)","de.thm.mni.backend.config.DataLoader.DataLoader"]},{"name":"constructor(userService: UserService)","description":"de.thm.mni.backend.auth.token.TokenService.TokenService","location":"backend/de.thm.mni.backend.auth.token/-token-service/-token-service.html","searchKeys":["TokenService","constructor(userService: UserService)","de.thm.mni.backend.auth.token.TokenService.TokenService"]},{"name":"constructor(userService: UserService)","description":"de.thm.mni.backend.user.api.UserApi.UserApi","location":"backend/de.thm.mni.backend.user.api/-user-api/-user-api.html","searchKeys":["UserApi","constructor(userService: UserService)","de.thm.mni.backend.user.api.UserApi.UserApi"]},{"name":"constructor(userService: UserService)","description":"de.thm.mni.backend.user.api.UserGraphQLController.UserGraphQLController","location":"backend/de.thm.mni.backend.user.api/-user-graph-q-l-controller/-user-graph-q-l-controller.html","searchKeys":["UserGraphQLController","constructor(userService: UserService)","de.thm.mni.backend.user.api.UserGraphQLController.UserGraphQLController"]},{"name":"constructor(userService: UserService, tokenService: TokenService)","description":"de.thm.mni.backend.auth.api.AuthApi.AuthApi","location":"backend/de.thm.mni.backend.auth.api/-auth-api/-auth-api.html","searchKeys":["AuthApi","constructor(userService: UserService, tokenService: TokenService)","de.thm.mni.backend.auth.api.AuthApi.AuthApi"]},{"name":"constructor(username: String, firstName: String, lastName: String, email: String, password: String)","description":"de.thm.mni.backend.user.api.dto.UserCreate.UserCreate","location":"backend/de.thm.mni.backend.user.api.dto/-user-create/-user-create.html","searchKeys":["UserCreate","constructor(username: String, firstName: String, lastName: String, email: String, password: String)","de.thm.mni.backend.user.api.dto.UserCreate.UserCreate"]},{"name":"constructor(username: String, firstName: String, lastName: String, email: String, password: String)","description":"de.thm.mni.backend.user.api.dto.UserInput.UserInput","location":"backend/de.thm.mni.backend.user.api.dto/-user-input/-user-input.html","searchKeys":["UserInput","constructor(username: String, firstName: String, lastName: String, email: String, password: String)","de.thm.mni.backend.user.api.dto.UserInput.UserInput"]},{"name":"constructor(username: String, password: String)","description":"de.thm.mni.backend.auth.api.dto.LoginRequest.LoginRequest","location":"backend/de.thm.mni.backend.auth.api.dto/-login-request/-login-request.html","searchKeys":["LoginRequest","constructor(username: String, password: String)","de.thm.mni.backend.auth.api.dto.LoginRequest.LoginRequest"]},{"name":"data class CreateNoteRequest(val title: String, val content: String, val notebookId: UUID? = null)","description":"de.thm.mni.backend.note.api.CreateNoteRequest","location":"backend/de.thm.mni.backend.note.api/-create-note-request/index.html","searchKeys":["CreateNoteRequest","data class CreateNoteRequest(val title: String, val content: String, val notebookId: UUID? = null)","de.thm.mni.backend.note.api.CreateNoteRequest"]},{"name":"data class CreateNotebookRequest(val title: String, val image: String)","description":"de.thm.mni.backend.notebook.api.CreateNotebookRequest","location":"backend/de.thm.mni.backend.notebook.api/-create-notebook-request/index.html","searchKeys":["CreateNotebookRequest","data class CreateNotebookRequest(val title: String, val image: String)","de.thm.mni.backend.notebook.api.CreateNotebookRequest"]},{"name":"data class LoginRequest(val username: String, val password: String)","description":"de.thm.mni.backend.auth.api.dto.LoginRequest","location":"backend/de.thm.mni.backend.auth.api.dto/-login-request/index.html","searchKeys":["LoginRequest","data class LoginRequest(val username: String, val password: String)","de.thm.mni.backend.auth.api.dto.LoginRequest"]},{"name":"data class NoteInput(val title: String, val content: String, val notebookId: String)","description":"de.thm.mni.backend.note.api.dto.NoteInput","location":"backend/de.thm.mni.backend.note.api.dto/-note-input/index.html","searchKeys":["NoteInput","data class NoteInput(val title: String, val content: String, val notebookId: String)","de.thm.mni.backend.note.api.dto.NoteInput"]},{"name":"data class NotebookInput(val title: String, val image: String? = null)","description":"de.thm.mni.backend.notebook.api.dto.NotebookInput","location":"backend/de.thm.mni.backend.notebook.api.dto/-notebook-input/index.html","searchKeys":["NotebookInput","data class NotebookInput(val title: String, val image: String? = null)","de.thm.mni.backend.notebook.api.dto.NotebookInput"]},{"name":"data class TokenResponse(val token: String)","description":"de.thm.mni.backend.auth.api.dto.TokenResponse","location":"backend/de.thm.mni.backend.auth.api.dto/-token-response/index.html","searchKeys":["TokenResponse","data class TokenResponse(val token: String)","de.thm.mni.backend.auth.api.dto.TokenResponse"]},{"name":"data class UpdateNoteRequest(val title: String, val content: String, val notebookId: UUID? = null)","description":"de.thm.mni.backend.note.api.UpdateNoteRequest","location":"backend/de.thm.mni.backend.note.api/-update-note-request/index.html","searchKeys":["UpdateNoteRequest","data class UpdateNoteRequest(val title: String, val content: String, val notebookId: UUID? = null)","de.thm.mni.backend.note.api.UpdateNoteRequest"]},{"name":"data class UpdateNotebookRequest(val title: String, val image: String)","description":"de.thm.mni.backend.notebook.api.UpdateNotebookRequest","location":"backend/de.thm.mni.backend.notebook.api/-update-notebook-request/index.html","searchKeys":["UpdateNotebookRequest","data class UpdateNotebookRequest(val title: String, val image: String)","de.thm.mni.backend.notebook.api.UpdateNotebookRequest"]},{"name":"data class UserCreate(val username: String, val firstName: String, val lastName: String, val email: String, val password: String)","description":"de.thm.mni.backend.user.api.dto.UserCreate","location":"backend/de.thm.mni.backend.user.api.dto/-user-create/index.html","searchKeys":["UserCreate","data class UserCreate(val username: String, val firstName: String, val lastName: String, val email: String, val password: String)","de.thm.mni.backend.user.api.dto.UserCreate"]},{"name":"data class UserInput(val username: String, val firstName: String, val lastName: String, val email: String, val password: String)","description":"de.thm.mni.backend.user.api.dto.UserInput","location":"backend/de.thm.mni.backend.user.api.dto/-user-input/index.html","searchKeys":["UserInput","data class UserInput(val username: String, val firstName: String, val lastName: String, val email: String, val password: String)","de.thm.mni.backend.user.api.dto.UserInput"]},{"name":"data class UserResponse(val id: String, val username: String, val firstName: String, val lastName: String, val email: String)","description":"de.thm.mni.backend.user.api.dto.UserResponse","location":"backend/de.thm.mni.backend.user.api.dto/-user-response/index.html","searchKeys":["UserResponse","data class UserResponse(val id: String, val username: String, val firstName: String, val lastName: String, val email: String)","de.thm.mni.backend.user.api.dto.UserResponse"]},{"name":"fun corsConfigurationSource(): CorsConfigurationSource","description":"de.thm.mni.backend.config.SecurityConfig.corsConfigurationSource","location":"backend/de.thm.mni.backend.config/-security-config/cors-configuration-source.html","searchKeys":["corsConfigurationSource","fun corsConfigurationSource(): CorsConfigurationSource","de.thm.mni.backend.config.SecurityConfig.corsConfigurationSource"]},{"name":"fun create(user: User): String","description":"de.thm.mni.backend.auth.token.TokenService.create","location":"backend/de.thm.mni.backend.auth.token/-token-service/create.html","searchKeys":["create","fun create(user: User): String","de.thm.mni.backend.auth.token.TokenService.create"]},{"name":"fun create(username: String, firstName: String, lastName: String, email: String, password: String): User","description":"de.thm.mni.backend.user.service.UserService.create","location":"backend/de.thm.mni.backend.user.service/-user-service/create.html","searchKeys":["create","fun create(username: String, firstName: String, lastName: String, email: String, password: String): User","de.thm.mni.backend.user.service.UserService.create"]},{"name":"fun createNote(input: NoteInput): Note?","description":"de.thm.mni.backend.note.api.NoteGraphQLController.createNote","location":"backend/de.thm.mni.backend.note.api/-note-graph-q-l-controller/create-note.html","searchKeys":["createNote","fun createNote(input: NoteInput): Note?","de.thm.mni.backend.note.api.NoteGraphQLController.createNote"]},{"name":"fun createNote(noteRequest: CreateNoteRequest, authentication: Authentication): ResponseEntity<Note>","description":"de.thm.mni.backend.note.api.NoteApi.createNote","location":"backend/de.thm.mni.backend.note.api/-note-api/create-note.html","searchKeys":["createNote","fun createNote(noteRequest: CreateNoteRequest, authentication: Authentication): ResponseEntity<Note>","de.thm.mni.backend.note.api.NoteApi.createNote"]},{"name":"fun createNotebook(input: NotebookInput): Notebook?","description":"de.thm.mni.backend.notebook.api.NotebookGraphQLController.createNotebook","location":"backend/de.thm.mni.backend.notebook.api/-notebook-graph-q-l-controller/create-notebook.html","searchKeys":["createNotebook","fun createNotebook(input: NotebookInput): Notebook?","de.thm.mni.backend.notebook.api.NotebookGraphQLController.createNotebook"]},{"name":"fun createNotebook(notebookRequest: CreateNotebookRequest, authentication: Authentication): ResponseEntity<Notebook>","description":"de.thm.mni.backend.notebook.api.NotebookApi.createNotebook","location":"backend/de.thm.mni.backend.notebook.api/-notebook-api/create-notebook.html","searchKeys":["createNotebook","fun createNotebook(notebookRequest: CreateNotebookRequest, authentication: Authentication): ResponseEntity<Notebook>","de.thm.mni.backend.notebook.api.NotebookApi.createNotebook"]},{"name":"fun createUser(input: UserInput): User","description":"de.thm.mni.backend.user.api.UserGraphQLController.createUser","location":"backend/de.thm.mni.backend.user.api/-user-graph-q-l-controller/create-user.html","searchKeys":["createUser","fun createUser(input: UserInput): User","de.thm.mni.backend.user.api.UserGraphQLController.createUser"]},{"name":"fun decode(token: String): DecodedJWT?","description":"de.thm.mni.backend.auth.token.TokenService.decode","location":"backend/de.thm.mni.backend.auth.token/-token-service/decode.html","searchKeys":["decode","fun decode(token: String): DecodedJWT?","de.thm.mni.backend.auth.token.TokenService.decode"]},{"name":"fun delete(id: UUID): Boolean","description":"de.thm.mni.backend.user.service.UserService.delete","location":"backend/de.thm.mni.backend.user.service/-user-service/delete.html","searchKeys":["delete","fun delete(id: UUID): Boolean","de.thm.mni.backend.user.service.UserService.delete"]},{"name":"fun deleteNote(id: String): Boolean","description":"de.thm.mni.backend.note.api.NoteGraphQLController.deleteNote","location":"backend/de.thm.mni.backend.note.api/-note-graph-q-l-controller/delete-note.html","searchKeys":["deleteNote","fun deleteNote(id: String): Boolean","de.thm.mni.backend.note.api.NoteGraphQLController.deleteNote"]},{"name":"fun deleteNote(id: UUID): ResponseEntity<Unit>","description":"de.thm.mni.backend.note.api.NoteApi.deleteNote","location":"backend/de.thm.mni.backend.note.api/-note-api/delete-note.html","searchKeys":["deleteNote","fun deleteNote(id: UUID): ResponseEntity<Unit>","de.thm.mni.backend.note.api.NoteApi.deleteNote"]},{"name":"fun deleteNotebook(id: String): Boolean","description":"de.thm.mni.backend.notebook.api.NotebookGraphQLController.deleteNotebook","location":"backend/de.thm.mni.backend.notebook.api/-notebook-graph-q-l-controller/delete-notebook.html","searchKeys":["deleteNotebook","fun deleteNotebook(id: String): Boolean","de.thm.mni.backend.notebook.api.NotebookGraphQLController.deleteNotebook"]},{"name":"fun deleteNotebook(id: UUID): ResponseEntity<Unit>","description":"de.thm.mni.backend.notebook.api.NotebookApi.deleteNotebook","location":"backend/de.thm.mni.backend.notebook.api/-notebook-api/delete-notebook.html","searchKeys":["deleteNotebook","fun deleteNotebook(id: UUID): ResponseEntity<Unit>","de.thm.mni.backend.notebook.api.NotebookApi.deleteNotebook"]},{"name":"fun deleteUser(id: String): Boolean","description":"de.thm.mni.backend.user.api.UserGraphQLController.deleteUser","location":"backend/de.thm.mni.backend.user.api/-user-graph-q-l-controller/delete-user.html","searchKeys":["deleteUser","fun deleteUser(id: String): Boolean","de.thm.mni.backend.user.api.UserGraphQLController.deleteUser"]},{"name":"fun deleteUser(id: String): ResponseEntity<Void>","description":"de.thm.mni.backend.user.api.UserApi.deleteUser","location":"backend/de.thm.mni.backend.user.api/-user-api/delete-user.html","searchKeys":["deleteUser","fun deleteUser(id: String): ResponseEntity<Void>","de.thm.mni.backend.user.api.UserApi.deleteUser"]},{"name":"fun find(id: UUID): User?","description":"de.thm.mni.backend.user.service.UserService.find","location":"backend/de.thm.mni.backend.user.service/-user-service/find.html","searchKeys":["find","fun find(id: UUID): User?","de.thm.mni.backend.user.service.UserService.find"]},{"name":"fun findAll(): List<User>","description":"de.thm.mni.backend.user.service.UserService.findAll","location":"backend/de.thm.mni.backend.user.service/-user-service/find-all.html","searchKeys":["findAll","fun findAll(): List<User>","de.thm.mni.backend.user.service.UserService.findAll"]},{"name":"fun findById(id: UUID): User?","description":"de.thm.mni.backend.user.service.UserService.findById","location":"backend/de.thm.mni.backend.user.service/-user-service/find-by-id.html","searchKeys":["findById","fun findById(id: UUID): User?","de.thm.mni.backend.user.service.UserService.findById"]},{"name":"fun findByUsername(username: String): User?","description":"de.thm.mni.backend.user.service.UserService.findByUsername","location":"backend/de.thm.mni.backend.user.service/-user-service/find-by-username.html","searchKeys":["findByUsername","fun findByUsername(username: String): User?","de.thm.mni.backend.user.service.UserService.findByUsername"]},{"name":"fun getAllNotebooks(authentication: Authentication): ResponseEntity<List<Notebook>>","description":"de.thm.mni.backend.notebook.api.NotebookApi.getAllNotebooks","location":"backend/de.thm.mni.backend.notebook.api/-notebook-api/get-all-notebooks.html","searchKeys":["getAllNotebooks","fun getAllNotebooks(authentication: Authentication): ResponseEntity<List<Notebook>>","de.thm.mni.backend.notebook.api.NotebookApi.getAllNotebooks"]},{"name":"fun getAllNotes(authentication: Authentication, notebookId: UUID?): ResponseEntity<List<Note>>","description":"de.thm.mni.backend.note.api.NoteApi.getAllNotes","location":"backend/de.thm.mni.backend.note.api/-note-api/get-all-notes.html","searchKeys":["getAllNotes","fun getAllNotes(authentication: Authentication, notebookId: UUID?): ResponseEntity<List<Note>>","de.thm.mni.backend.note.api.NoteApi.getAllNotes"]},{"name":"fun getAllUsers(): ResponseEntity<List<UserResponse>>","description":"de.thm.mni.backend.user.api.UserApi.getAllUsers","location":"backend/de.thm.mni.backend.user.api/-user-api/get-all-users.html","searchKeys":["getAllUsers","fun getAllUsers(): ResponseEntity<List<UserResponse>>","de.thm.mni.backend.user.api.UserApi.getAllUsers"]},{"name":"fun getNoteById(id: UUID): ResponseEntity<Note>","description":"de.thm.mni.backend.note.api.NoteApi.getNoteById","location":"backend/de.thm.mni.backend.note.api/-note-api/get-note-by-id.html","searchKeys":["getNoteById","fun getNoteById(id: UUID): ResponseEntity<Note>","de.thm.mni.backend.note.api.NoteApi.getNoteById"]},{"name":"fun getNotebookById(id: UUID): ResponseEntity<Notebook>","description":"de.thm.mni.backend.notebook.api.NotebookApi.getNotebookById","location":"backend/de.thm.mni.backend.notebook.api/-notebook-api/get-notebook-by-id.html","searchKeys":["getNotebookById","fun getNotebookById(id: UUID): ResponseEntity<Notebook>","de.thm.mni.backend.notebook.api.NotebookApi.getNotebookById"]},{"name":"fun getUserById(id: String): ResponseEntity<UserResponse>","description":"de.thm.mni.backend.user.api.UserApi.getUserById","location":"backend/de.thm.mni.backend.user.api/-user-api/get-user-by-id.html","searchKeys":["getUserById","fun getUserById(id: String): ResponseEntity<UserResponse>","de.thm.mni.backend.user.api.UserApi.getUserById"]},{"name":"fun getUserFromToken(token: String): User?","description":"de.thm.mni.backend.auth.token.TokenService.getUserFromToken","location":"backend/de.thm.mni.backend.auth.token/-token-service/get-user-from-token.html","searchKeys":["getUserFromToken","fun getUserFromToken(token: String): User?","de.thm.mni.backend.auth.token.TokenService.getUserFromToken"]},{"name":"fun isValid(token: String): Boolean","description":"de.thm.mni.backend.auth.token.TokenService.isValid","location":"backend/de.thm.mni.backend.auth.token/-token-service/is-valid.html","searchKeys":["isValid","fun isValid(token: String): Boolean","de.thm.mni.backend.auth.token.TokenService.isValid"]},{"name":"fun login(req: LoginRequest): ResponseEntity<TokenResponse>","description":"de.thm.mni.backend.auth.api.AuthApi.login","location":"backend/de.thm.mni.backend.auth.api/-auth-api/login.html","searchKeys":["login","fun login(req: LoginRequest): ResponseEntity<TokenResponse>","de.thm.mni.backend.auth.api.AuthApi.login"]},{"name":"fun main(args: Array<String>)","description":"de.thm.mni.backend.main","location":"backend/de.thm.mni.backend/main.html","searchKeys":["main","fun main(args: Array<String>)","de.thm.mni.backend.main"]},{"name":"fun note(id: String): Note?","description":"de.thm.mni.backend.note.api.NoteGraphQLController.note","location":"backend/de.thm.mni.backend.note.api/-note-graph-q-l-controller/note.html","searchKeys":["note","fun note(id: String): Note?","de.thm.mni.backend.note.api.NoteGraphQLController.note"]},{"name":"fun notebook(id: String): Notebook?","description":"de.thm.mni.backend.notebook.api.NotebookGraphQLController.notebook","location":"backend/de.thm.mni.backend.notebook.api/-notebook-graph-q-l-controller/notebook.html","searchKeys":["notebook","fun notebook(id: String): Notebook?","de.thm.mni.backend.notebook.api.NotebookGraphQLController.notebook"]},{"name":"fun notebooks(): List<Notebook>","description":"de.thm.mni.backend.notebook.api.NotebookGraphQLController.notebooks","location":"backend/de.thm.mni.backend.notebook.api/-notebook-graph-q-l-controller/notebooks.html","searchKeys":["notebooks","fun notebooks(): List<Notebook>","de.thm.mni.backend.notebook.api.NotebookGraphQLController.notebooks"]},{"name":"fun notebooksByUser(userId: String): List<Notebook>","description":"de.thm.mni.backend.notebook.api.NotebookGraphQLController.notebooksByUser","location":"backend/de.thm.mni.backend.notebook.api/-notebook-graph-q-l-controller/notebooks-by-user.html","searchKeys":["notebooksByUser","fun notebooksByUser(userId: String): List<Notebook>","de.thm.mni.backend.notebook.api.NotebookGraphQLController.notebooksByUser"]},{"name":"fun notes(): List<Note>","description":"de.thm.mni.backend.note.api.NoteGraphQLController.notes","location":"backend/de.thm.mni.backend.note.api/-note-graph-q-l-controller/notes.html","searchKeys":["notes","fun notes(): List<Note>","de.thm.mni.backend.note.api.NoteGraphQLController.notes"]},{"name":"fun notesByNotebook(notebookId: String): List<Note>","description":"de.thm.mni.backend.note.api.NoteGraphQLController.notesByNotebook","location":"backend/de.thm.mni.backend.note.api/-note-graph-q-l-controller/notes-by-notebook.html","searchKeys":["notesByNotebook","fun notesByNotebook(notebookId: String): List<Note>","de.thm.mni.backend.note.api.NoteGraphQLController.notesByNotebook"]},{"name":"fun notesByTitle(title: String): List<Note>","description":"de.thm.mni.backend.note.api.NoteGraphQLController.notesByTitle","location":"backend/de.thm.mni.backend.note.api/-note-graph-q-l-controller/notes-by-title.html","searchKeys":["notesByTitle","fun notesByTitle(title: String): List<Note>","de.thm.mni.backend.note.api.NoteGraphQLController.notesByTitle"]},{"name":"fun register(req: UserCreate): ResponseEntity<UserResponse>","description":"de.thm.mni.backend.user.api.UserApi.register","location":"backend/de.thm.mni.backend.user.api/-user-api/register.html","searchKeys":["register","fun register(req: UserCreate): ResponseEntity<UserResponse>","de.thm.mni.backend.user.api.UserApi.register"]},{"name":"fun searchNotes(title: String, authentication: Authentication): ResponseEntity<List<Note>>","description":"de.thm.mni.backend.note.api.NoteApi.searchNotes","location":"backend/de.thm.mni.backend.note.api/-note-api/search-notes.html","searchKeys":["searchNotes","fun searchNotes(title: String, authentication: Authentication): ResponseEntity<List<Note>>","de.thm.mni.backend.note.api.NoteApi.searchNotes"]},{"name":"fun securityFilterChain(http: HttpSecurity): SecurityFilterChain","description":"de.thm.mni.backend.config.SecurityConfig.securityFilterChain","location":"backend/de.thm.mni.backend.config/-security-config/security-filter-chain.html","searchKeys":["securityFilterChain","fun securityFilterChain(http: HttpSecurity): SecurityFilterChain","de.thm.mni.backend.config.SecurityConfig.securityFilterChain"]},{"name":"fun update(id: UUID, username: String, firstName: String, lastName: String, email: String, password: String): User?","description":"de.thm.mni.backend.user.service.UserService.update","location":"backend/de.thm.mni.backend.user.service/-user-service/update.html","searchKeys":["update","fun update(id: UUID, username: String, firstName: String, lastName: String, email: String, password: String): User?","de.thm.mni.backend.user.service.UserService.update"]},{"name":"fun updateNote(id: String, input: NoteInput): Note?","description":"de.thm.mni.backend.note.api.NoteGraphQLController.updateNote","location":"backend/de.thm.mni.backend.note.api/-note-graph-q-l-controller/update-note.html","searchKeys":["updateNote","fun updateNote(id: String, input: NoteInput): Note?","de.thm.mni.backend.note.api.NoteGraphQLController.updateNote"]},{"name":"fun updateNote(id: UUID, noteRequest: UpdateNoteRequest): ResponseEntity<Note>","description":"de.thm.mni.backend.note.api.NoteApi.updateNote","location":"backend/de.thm.mni.backend.note.api/-note-api/update-note.html","searchKeys":["updateNote","fun updateNote(id: UUID, noteRequest: UpdateNoteRequest): ResponseEntity<Note>","de.thm.mni.backend.note.api.NoteApi.updateNote"]},{"name":"fun updateNotebook(id: String, input: NotebookInput): Notebook?","description":"de.thm.mni.backend.notebook.api.NotebookGraphQLController.updateNotebook","location":"backend/de.thm.mni.backend.notebook.api/-notebook-graph-q-l-controller/update-notebook.html","searchKeys":["updateNotebook","fun updateNotebook(id: String, input: NotebookInput): Notebook?","de.thm.mni.backend.notebook.api.NotebookGraphQLController.updateNotebook"]},{"name":"fun updateNotebook(id: UUID, notebookRequest: UpdateNotebookRequest): ResponseEntity<Notebook>","description":"de.thm.mni.backend.notebook.api.NotebookApi.updateNotebook","location":"backend/de.thm.mni.backend.notebook.api/-notebook-api/update-notebook.html","searchKeys":["updateNotebook","fun updateNotebook(id: UUID, notebookRequest: UpdateNotebookRequest): ResponseEntity<Notebook>","de.thm.mni.backend.notebook.api.NotebookApi.updateNotebook"]},{"name":"fun updateUser(id: String, input: UserInput): User?","description":"de.thm.mni.backend.user.api.UserGraphQLController.updateUser","location":"backend/de.thm.mni.backend.user.api/-user-graph-q-l-controller/update-user.html","searchKeys":["updateUser","fun updateUser(id: String, input: UserInput): User?","de.thm.mni.backend.user.api.UserGraphQLController.updateUser"]},{"name":"fun updateUser(id: String, req: UserCreate): ResponseEntity<UserResponse>","description":"de.thm.mni.backend.user.api.UserApi.updateUser","location":"backend/de.thm.mni.backend.user.api/-user-api/update-user.html","searchKeys":["updateUser","fun updateUser(id: String, req: UserCreate): ResponseEntity<UserResponse>","de.thm.mni.backend.user.api.UserApi.updateUser"]},{"name":"fun user(id: String): User?","description":"de.thm.mni.backend.user.api.UserGraphQLController.user","location":"backend/de.thm.mni.backend.user.api/-user-graph-q-l-controller/user.html","searchKeys":["user","fun user(id: String): User?","de.thm.mni.backend.user.api.UserGraphQLController.user"]},{"name":"fun userByUsername(username: String): User?","description":"de.thm.mni.backend.user.api.UserGraphQLController.userByUsername","location":"backend/de.thm.mni.backend.user.api/-user-graph-q-l-controller/user-by-username.html","searchKeys":["userByUsername","fun userByUsername(username: String): User?","de.thm.mni.backend.user.api.UserGraphQLController.userByUsername"]},{"name":"fun users(): List<User>","description":"de.thm.mni.backend.user.api.UserGraphQLController.users","location":"backend/de.thm.mni.backend.user.api/-user-graph-q-l-controller/users.html","searchKeys":["users","fun users(): List<User>","de.thm.mni.backend.user.api.UserGraphQLController.users"]},{"name":"interface NoteRepository : JpaRepository<Note, UUID> ","description":"de.thm.mni.backend.note.repository.NoteRepository","location":"backend/de.thm.mni.backend.note.repository/-note-repository/index.html","searchKeys":["NoteRepository","interface NoteRepository : JpaRepository<Note, UUID> ","de.thm.mni.backend.note.repository.NoteRepository"]},{"name":"interface NotebookRepository : JpaRepository<Notebook, UUID> ","description":"de.thm.mni.backend.notebook.repository.NotebookRepository","location":"backend/de.thm.mni.backend.notebook.repository/-notebook-repository/index.html","searchKeys":["NotebookRepository","interface NotebookRepository : JpaRepository<Notebook, UUID> ","de.thm.mni.backend.notebook.repository.NotebookRepository"]},{"name":"interface UserRepository : JpaRepository<User, UUID> ","description":"de.thm.mni.backend.user.repository.UserRepository","location":"backend/de.thm.mni.backend.user.repository/-user-repository/index.html","searchKeys":["UserRepository","interface UserRepository : JpaRepository<User, UUID> ","de.thm.mni.backend.user.repository.UserRepository"]},{"name":"open override fun run(vararg args: String?)","description":"de.thm.mni.backend.config.DataLoader.run","location":"backend/de.thm.mni.backend.config/-data-loader/run.html","searchKeys":["run","open override fun run(vararg args: String?)","de.thm.mni.backend.config.DataLoader.run"]},{"name":"val content: String","description":"de.thm.mni.backend.note.api.CreateNoteRequest.content","location":"backend/de.thm.mni.backend.note.api/-create-note-request/content.html","searchKeys":["content","val content: String","de.thm.mni.backend.note.api.CreateNoteRequest.content"]},{"name":"val content: String","description":"de.thm.mni.backend.note.api.UpdateNoteRequest.content","location":"backend/de.thm.mni.backend.note.api/-update-note-request/content.html","searchKeys":["content","val content: String","de.thm.mni.backend.note.api.UpdateNoteRequest.content"]},{"name":"val content: String","description":"de.thm.mni.backend.note.api.dto.NoteInput.content","location":"backend/de.thm.mni.backend.note.api.dto/-note-input/content.html","searchKeys":["content","val content: String","de.thm.mni.backend.note.api.dto.NoteInput.content"]},{"name":"val content: String","description":"de.thm.mni.backend.note.model.Note.content","location":"backend/de.thm.mni.backend.note.model/-note/content.html","searchKeys":["content","val content: String","de.thm.mni.backend.note.model.Note.content"]},{"name":"val createdAt: Date","description":"de.thm.mni.backend.note.model.Note.createdAt","location":"backend/de.thm.mni.backend.note.model/-note/created-at.html","searchKeys":["createdAt","val createdAt: Date","de.thm.mni.backend.note.model.Note.createdAt"]},{"name":"val createdAt: Date","description":"de.thm.mni.backend.notebook.model.Notebook.createdAt","location":"backend/de.thm.mni.backend.notebook.model/-notebook/created-at.html","searchKeys":["createdAt","val createdAt: Date","de.thm.mni.backend.notebook.model.Notebook.createdAt"]},{"name":"val email: String","description":"de.thm.mni.backend.user.api.dto.UserCreate.email","location":"backend/de.thm.mni.backend.user.api.dto/-user-create/email.html","searchKeys":["email","val email: String","de.thm.mni.backend.user.api.dto.UserCreate.email"]},{"name":"val email: String","description":"de.thm.mni.backend.user.api.dto.UserInput.email","location":"backend/de.thm.mni.backend.user.api.dto/-user-input/email.html","searchKeys":["email","val email: String","de.thm.mni.backend.user.api.dto.UserInput.email"]},{"name":"val email: String","description":"de.thm.mni.backend.user.api.dto.UserResponse.email","location":"backend/de.thm.mni.backend.user.api.dto/-user-response/email.html","searchKeys":["email","val email: String","de.thm.mni.backend.user.api.dto.UserResponse.email"]},{"name":"val email: String","description":"de.thm.mni.backend.user.model.User.email","location":"backend/de.thm.mni.backend.user.model/-user/email.html","searchKeys":["email","val email: String","de.thm.mni.backend.user.model.User.email"]},{"name":"val firstName: String","description":"de.thm.mni.backend.user.api.dto.UserCreate.firstName","location":"backend/de.thm.mni.backend.user.api.dto/-user-create/first-name.html","searchKeys":["firstName","val firstName: String","de.thm.mni.backend.user.api.dto.UserCreate.firstName"]},{"name":"val firstName: String","description":"de.thm.mni.backend.user.api.dto.UserInput.firstName","location":"backend/de.thm.mni.backend.user.api.dto/-user-input/first-name.html","searchKeys":["firstName","val firstName: String","de.thm.mni.backend.user.api.dto.UserInput.firstName"]},{"name":"val firstName: String","description":"de.thm.mni.backend.user.api.dto.UserResponse.firstName","location":"backend/de.thm.mni.backend.user.api.dto/-user-response/first-name.html","searchKeys":["firstName","val firstName: String","de.thm.mni.backend.user.api.dto.UserResponse.firstName"]},{"name":"val firstName: String","description":"de.thm.mni.backend.user.model.User.firstName","location":"backend/de.thm.mni.backend.user.model/-user/first-name.html","searchKeys":["firstName","val firstName: String","de.thm.mni.backend.user.model.User.firstName"]},{"name":"val id: String","description":"de.thm.mni.backend.user.api.dto.UserResponse.id","location":"backend/de.thm.mni.backend.user.api.dto/-user-response/id.html","searchKeys":["id","val id: String","de.thm.mni.backend.user.api.dto.UserResponse.id"]},{"name":"val id: UUID? = null","description":"de.thm.mni.backend.note.model.Note.id","location":"backend/de.thm.mni.backend.note.model/-note/id.html","searchKeys":["id","val id: UUID? = null","de.thm.mni.backend.note.model.Note.id"]},{"name":"val id: UUID? = null","description":"de.thm.mni.backend.notebook.model.Notebook.id","location":"backend/de.thm.mni.backend.notebook.model/-notebook/id.html","searchKeys":["id","val id: UUID? = null","de.thm.mni.backend.notebook.model.Notebook.id"]},{"name":"val id: UUID? = null","description":"de.thm.mni.backend.user.model.User.id","location":"backend/de.thm.mni.backend.user.model/-user/id.html","searchKeys":["id","val id: UUID? = null","de.thm.mni.backend.user.model.User.id"]},{"name":"val image: String","description":"de.thm.mni.backend.notebook.api.CreateNotebookRequest.image","location":"backend/de.thm.mni.backend.notebook.api/-create-notebook-request/image.html","searchKeys":["image","val image: String","de.thm.mni.backend.notebook.api.CreateNotebookRequest.image"]},{"name":"val image: String","description":"de.thm.mni.backend.notebook.api.UpdateNotebookRequest.image","location":"backend/de.thm.mni.backend.notebook.api/-update-notebook-request/image.html","searchKeys":["image","val image: String","de.thm.mni.backend.notebook.api.UpdateNotebookRequest.image"]},{"name":"val image: String","description":"de.thm.mni.backend.notebook.model.Notebook.image","location":"backend/de.thm.mni.backend.notebook.model/-notebook/image.html","searchKeys":["image","val image: String","de.thm.mni.backend.notebook.model.Notebook.image"]},{"name":"val image: String? = null","description":"de.thm.mni.backend.notebook.api.dto.NotebookInput.image","location":"backend/de.thm.mni.backend.notebook.api.dto/-notebook-input/image.html","searchKeys":["image","val image: String? = null","de.thm.mni.backend.notebook.api.dto.NotebookInput.image"]},{"name":"val keyPair: KeyPair","description":"de.thm.mni.backend.auth.token.TokenService.keyPair","location":"backend/de.thm.mni.backend.auth.token/-token-service/key-pair.html","searchKeys":["keyPair","val keyPair: KeyPair","de.thm.mni.backend.auth.token.TokenService.keyPair"]},{"name":"val lastName: String","description":"de.thm.mni.backend.user.api.dto.UserCreate.lastName","location":"backend/de.thm.mni.backend.user.api.dto/-user-create/last-name.html","searchKeys":["lastName","val lastName: String","de.thm.mni.backend.user.api.dto.UserCreate.lastName"]},{"name":"val lastName: String","description":"de.thm.mni.backend.user.api.dto.UserInput.lastName","location":"backend/de.thm.mni.backend.user.api.dto/-user-input/last-name.html","searchKeys":["lastName","val lastName: String","de.thm.mni.backend.user.api.dto.UserInput.lastName"]},{"name":"val lastName: String","description":"de.thm.mni.backend.user.api.dto.UserResponse.lastName","location":"backend/de.thm.mni.backend.user.api.dto/-user-response/last-name.html","searchKeys":["lastName","val lastName: String","de.thm.mni.backend.user.api.dto.UserResponse.lastName"]},{"name":"val lastName: String","description":"de.thm.mni.backend.user.model.User.lastName","location":"backend/de.thm.mni.backend.user.model/-user/last-name.html","searchKeys":["lastName","val lastName: String","de.thm.mni.backend.user.model.User.lastName"]},{"name":"val modifiedAt: Date","description":"de.thm.mni.backend.note.model.Note.modifiedAt","location":"backend/de.thm.mni.backend.note.model/-note/modified-at.html","searchKeys":["modifiedAt","val modifiedAt: Date","de.thm.mni.backend.note.model.Note.modifiedAt"]},{"name":"val notebook: Notebook? = null","description":"de.thm.mni.backend.note.model.Note.notebook","location":"backend/de.thm.mni.backend.note.model/-note/notebook.html","searchKeys":["notebook","val notebook: Notebook? = null","de.thm.mni.backend.note.model.Note.notebook"]},{"name":"val notebookId: String","description":"de.thm.mni.backend.note.api.dto.NoteInput.notebookId","location":"backend/de.thm.mni.backend.note.api.dto/-note-input/notebook-id.html","searchKeys":["notebookId","val notebookId: String","de.thm.mni.backend.note.api.dto.NoteInput.notebookId"]},{"name":"val notebookId: UUID? = null","description":"de.thm.mni.backend.note.api.CreateNoteRequest.notebookId","location":"backend/de.thm.mni.backend.note.api/-create-note-request/notebook-id.html","searchKeys":["notebookId","val notebookId: UUID? = null","de.thm.mni.backend.note.api.CreateNoteRequest.notebookId"]},{"name":"val notebookId: UUID? = null","description":"de.thm.mni.backend.note.api.UpdateNoteRequest.notebookId","location":"backend/de.thm.mni.backend.note.api/-update-note-request/notebook-id.html","searchKeys":["notebookId","val notebookId: UUID? = null","de.thm.mni.backend.note.api.UpdateNoteRequest.notebookId"]},{"name":"val notebookId: UUID? = null","description":"de.thm.mni.backend.note.model.Note.notebookId","location":"backend/de.thm.mni.backend.note.model/-note/notebook-id.html","searchKeys":["notebookId","val notebookId: UUID? = null","de.thm.mni.backend.note.model.Note.notebookId"]},{"name":"val notes: List<Note>","description":"de.thm.mni.backend.notebook.model.Notebook.notes","location":"backend/de.thm.mni.backend.notebook.model/-notebook/notes.html","searchKeys":["notes","val notes: List<Note>","de.thm.mni.backend.notebook.model.Notebook.notes"]},{"name":"val password: String","description":"de.thm.mni.backend.auth.api.dto.LoginRequest.password","location":"backend/de.thm.mni.backend.auth.api.dto/-login-request/password.html","searchKeys":["password","val password: String","de.thm.mni.backend.auth.api.dto.LoginRequest.password"]},{"name":"val password: String","description":"de.thm.mni.backend.user.api.dto.UserCreate.password","location":"backend/de.thm.mni.backend.user.api.dto/-user-create/password.html","searchKeys":["password","val password: String","de.thm.mni.backend.user.api.dto.UserCreate.password"]},{"name":"val password: String","description":"de.thm.mni.backend.user.api.dto.UserInput.password","location":"backend/de.thm.mni.backend.user.api.dto/-user-input/password.html","searchKeys":["password","val password: String","de.thm.mni.backend.user.api.dto.UserInput.password"]},{"name":"val password: String","description":"de.thm.mni.backend.user.model.User.password","location":"backend/de.thm.mni.backend.user.model/-user/password.html","searchKeys":["password","val password: String","de.thm.mni.backend.user.model.User.password"]},{"name":"val privateKey: RSAPrivateKey","description":"de.thm.mni.backend.auth.token.TokenService.privateKey","location":"backend/de.thm.mni.backend.auth.token/-token-service/private-key.html","searchKeys":["privateKey","val privateKey: RSAPrivateKey","de.thm.mni.backend.auth.token.TokenService.privateKey"]},{"name":"val publicKey: RSAPublicKey","description":"de.thm.mni.backend.auth.token.TokenService.publicKey","location":"backend/de.thm.mni.backend.auth.token/-token-service/public-key.html","searchKeys":["publicKey","val publicKey: RSAPublicKey","de.thm.mni.backend.auth.token.TokenService.publicKey"]},{"name":"val title: String","description":"de.thm.mni.backend.note.api.CreateNoteRequest.title","location":"backend/de.thm.mni.backend.note.api/-create-note-request/title.html","searchKeys":["title","val title: String","de.thm.mni.backend.note.api.CreateNoteRequest.title"]},{"name":"val title: String","description":"de.thm.mni.backend.note.api.UpdateNoteRequest.title","location":"backend/de.thm.mni.backend.note.api/-update-note-request/title.html","searchKeys":["title","val title: String","de.thm.mni.backend.note.api.UpdateNoteRequest.title"]},{"name":"val title: String","description":"de.thm.mni.backend.note.api.dto.NoteInput.title","location":"backend/de.thm.mni.backend.note.api.dto/-note-input/title.html","searchKeys":["title","val title: String","de.thm.mni.backend.note.api.dto.NoteInput.title"]},{"name":"val title: String","description":"de.thm.mni.backend.note.model.Note.title","location":"backend/de.thm.mni.backend.note.model/-note/title.html","searchKeys":["title","val title: String","de.thm.mni.backend.note.model.Note.title"]},{"name":"val title: String","description":"de.thm.mni.backend.notebook.api.CreateNotebookRequest.title","location":"backend/de.thm.mni.backend.notebook.api/-create-notebook-request/title.html","searchKeys":["title","val title: String","de.thm.mni.backend.notebook.api.CreateNotebookRequest.title"]},{"name":"val title: String","description":"de.thm.mni.backend.notebook.api.UpdateNotebookRequest.title","location":"backend/de.thm.mni.backend.notebook.api/-update-notebook-request/title.html","searchKeys":["title","val title: String","de.thm.mni.backend.notebook.api.UpdateNotebookRequest.title"]},{"name":"val title: String","description":"de.thm.mni.backend.notebook.api.dto.NotebookInput.title","location":"backend/de.thm.mni.backend.notebook.api.dto/-notebook-input/title.html","searchKeys":["title","val title: String","de.thm.mni.backend.notebook.api.dto.NotebookInput.title"]},{"name":"val title: String","description":"de.thm.mni.backend.notebook.model.Notebook.title","location":"backend/de.thm.mni.backend.notebook.model/-notebook/title.html","searchKeys":["title","val title: String","de.thm.mni.backend.notebook.model.Notebook.title"]},{"name":"val token: String","description":"de.thm.mni.backend.auth.api.dto.TokenResponse.token","location":"backend/de.thm.mni.backend.auth.api.dto/-token-response/token.html","searchKeys":["token","val token: String","de.thm.mni.backend.auth.api.dto.TokenResponse.token"]},{"name":"val userId: String","description":"de.thm.mni.backend.note.model.Note.userId","location":"backend/de.thm.mni.backend.note.model/-note/user-id.html","searchKeys":["userId","val userId: String","de.thm.mni.backend.note.model.Note.userId"]},{"name":"val userId: String","description":"de.thm.mni.backend.notebook.model.Notebook.userId","location":"backend/de.thm.mni.backend.notebook.model/-notebook/user-id.html","searchKeys":["userId","val userId: String","de.thm.mni.backend.notebook.model.Notebook.userId"]},{"name":"val username: String","description":"de.thm.mni.backend.auth.api.dto.LoginRequest.username","location":"backend/de.thm.mni.backend.auth.api.dto/-login-request/username.html","searchKeys":["username","val username: String","de.thm.mni.backend.auth.api.dto.LoginRequest.username"]},{"name":"val username: String","description":"de.thm.mni.backend.user.api.dto.UserCreate.username","location":"backend/de.thm.mni.backend.user.api.dto/-user-create/username.html","searchKeys":["username","val username: String","de.thm.mni.backend.user.api.dto.UserCreate.username"]},{"name":"val username: String","description":"de.thm.mni.backend.user.api.dto.UserInput.username","location":"backend/de.thm.mni.backend.user.api.dto/-user-input/username.html","searchKeys":["username","val username: String","de.thm.mni.backend.user.api.dto.UserInput.username"]},{"name":"val username: String","description":"de.thm.mni.backend.user.api.dto.UserResponse.username","location":"backend/de.thm.mni.backend.user.api.dto/-user-response/username.html","searchKeys":["username","val username: String","de.thm.mni.backend.user.api.dto.UserResponse.username"]},{"name":"val username: String","description":"de.thm.mni.backend.user.model.User.username","location":"backend/de.thm.mni.backend.user.model/-user/username.html","searchKeys":["username","val username: String","de.thm.mni.backend.user.model.User.username"]}]
